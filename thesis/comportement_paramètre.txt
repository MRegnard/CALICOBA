prérequis :
    - valeur du pas δ
    - valeur de la proportion θ ∈ [0, 1]

algo :
    c0 <- c(p)
    c1 <- 0
    c2 <- 0
    direction <- 0
    check_next = [1, -1]
    tant que c0 ≠ 0 :
        si length(check_next) = 2 :
            c0 <- c(p)
            direction <- check_next.pop(0) # retourne et supprime l’élément en position 0
            p <- p + δ * direction
        sinon si length(check_next) = 1 :
            si direction > 0:
                c1 <- c(p)
            sinon :
                c2 <- c(p)
            direction = check_next.pop(0)
            p <- p + δ * direction
        sinon :
            si direction > 0:
                c1 <- c(p)
            sinon :
                c2 <- c(p)
            si c1 < c0 ou c2 < c0:
                si c1 < c2 :
                    direction = 1
                    c = c1
                sinon :
                    direction = -1
                    c = c2
                p <- p + (direction * δ / θ) * (c0 / c)
                check_next = [direction, -direction]
            sinon :  # SNC : aucun des deux cas ne fait diminuer la criticité, tentative de résolution
                TODO explorer le coté le plus prometteur
